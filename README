Eclipse IDE Vaadin framework project
------------------------------------

Running Eclipse project:

First you need to install plugins for Eclipse. Go HELP -> INSTALL NEW SOFTWARE...
Paste url http://www.apache.org/dist/ant/ivyde/updatesite to WORK WITH: box and 
click ADD...

Select the Apache Ivy, Apache Ivy Ant Tasks, and Apache IvyDE plugins and click
NEXT and install them.

Do the same thing for http://vaadin.com/eclipse and install Vaadin Plug-in for
Eclipse.

Then you need to download Apache Tomcat 7 from http://tomcat.apache.org/download-70.cgi. Extract it to some directory for example C:/Tomcat 7/. Then you need to download postgresql jdbc driver from 
http://jdbc.postgresql.org/download/postgresql-9.2-1003.jdbc4.jar and put it to tomcat 7 lib directory for example c:/tomcat 7/lib directory.

In Eclipse go to WINDOW -> PREFERENCES AND SERVER -> RUNTIME ENVIRONMENTS. You need to install apache tomcat runtime environment. Click ADD... and Select Apache Tomcat v7.0 and CHECK Create a new local server and klick NEXT. Click BROWSE... and select your tomcat 7 directory for example c:/tomcat 7/ and click FINISH and OK.

Download project from GitHub with Git Shell. In Git Hub shell go for example to directory c:/repo and use command "git clone git://github.com/hepajuku/GitHubRepository.git". Now when you start eclipse choose c:/repo/GitHubRepository as your WORKSPACE directory.

Select Project from Project Explorer. Press RUN -> DEBUG AS -> DEBUG ON SERVER. Choose an existing server and your tomcat v7.0 server at localhost. Press NEXT and put Project to CONFIGURED side with ADD button. Press FINISH and application should start. If application doesnt run, try to CLEAN TOMCAT WORKING DIRECTORY by right clickin it from SERVERS panel or remove it from RUNTIME ENVIRONMENTS and add again and remove Servers from PROJECT EXPLORER.


PostgreSQL server requirements
------------------------------

In postgreSQL database you need to have database called mydatabase and there one table called job_applications with columns first_name (character(100 length)), last_name (character(100 length)), gender (character(20 length)) and application (character(1000 length)). You also need user "admin" as superuser with "1234" password to mydatabase. Easiest way is to use pgAdmin III program to do that.


Application design
------------------

I tried to design application so that gui, listener, data and sql connection are in different classes.


ProjectUI handles user interface, MyButtonListener gets users inputs from ProjectUI and stores input data to JobApplication and checks if input is ok. Also sends information to database through JobApplication if all is ok. JobApplication stores user inputs and sends data to database in a proper form. SQLConnection makes a connection to database and sends data into it and finally closes the connection.